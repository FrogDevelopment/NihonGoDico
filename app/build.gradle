apply plugin: 'com.android.application'
apply plugin: 'org.ajoberstar.grgit'

def getVersionCode = { ->
    return grgit.tag.list().size()
}

def getVersionName = { ->
    return grgit.describe()
}

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        applicationId "fr.frogdevelopment.nihongo.dico"

        minSdkVersion 24
        targetSdkVersion 29

        versionCode getVersionCode()
        versionName getVersionName()
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Room components
//    def room_version = '2.2.3'
//    implementation "androidx.room:room-runtime:$room_version"
//    implementation "androidx.room:room-rxjava2:$room_version"
//    annotationProcessor "androidx.room:room-compiler:$room_version"
//    androidTestImplementation "androidx.room:room-testing:$room_version"

    // Lifecycle components
    def archLifecycleVersion = '2.2.0-rc03'
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-common-java8:$archLifecycleVersion"

    // UI
    def appcompat_version = '1.1.0'
    def constraint_layout_version = '1.1.3'
    def preferenceVersion = '1.1.0'
    def material_version = '1.2.0-alpha04'
//    def navigation_version = '2.1.0'
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.preference:preference:$preferenceVersion"
    implementation "com.google.android.material:material:$material_version"
//    implementation "androidx.navigation:navigation-fragment:$navigation_version"
//    implementation "androidx.navigation:navigation-ui:$navigation_version"

    // Testing
    def coreTestingVersion = '2.1.0'
    def junitVersion = '4.13'
    def mockitoVersion = '3.2.4'
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // REST Retrofit
    def retrofit_version = '2.7.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit_version"

    // Divers
    implementation 'org.apache.commons:commons-lang3:3.9'
}

task printVersion() {
    doLast {
        println("Version Code: ${getVersionCode()}")
        println("Version Name: ${getVersionName()}")
    }
}
