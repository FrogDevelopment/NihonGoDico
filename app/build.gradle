apply plugin: 'com.android.application'
apply from: "$project.rootDir/tools/script-git-version.gradle"
apply from: "$project.rootDir/tools/script-findbugs.gradle"
apply from: "$project.rootDir/tools/script-lint.gradle"
apply from: "$project.rootDir/tools/script-pmd.gradle"
apply from: "$project.rootDir/tools/script-java-code-coverage.gradle"

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "fr.frogdevelopment.nihongo.dico"

        minSdkVersion 21
        targetSdkVersion 27
    }

    signingConfigs {
        Properties props = new Properties()
        def propFile = new File(System.getenv("SIGNING_PROPERTIES"))
        if (propFile.canRead()) {
            props.load(new FileInputStream(propFile))
            if (props == null || props.isEmpty()) {
                println 'signing.properties found but entries are missing'
                debug = null
                release = null
            } else {
                debug {
                    keyAlias props['ng_key_alias']
                    keyPassword props['ng_key_password']
                    storePassword props['store_password']
                    storeFile file(props['store_file'])
                }
                release {
                    keyAlias props['ng_key_alias']
                    keyPassword props['ng_key_password']
                    storePassword props['store_password']
                    storeFile file(props['store_file'])
                }
            }
        } else {
            println 'signing.properties not found'
        }
    }

    // Specifies a flavor dimension.
    flavorDimensions "nihongo"

    productFlavors {
        dev {
            signingConfig signingConfigs.debug
            versionCode gitVersionCodeTime
            versionName gitVersionName
            applicationId "fr.frogdevelopment.nihongo.dico.dev"

            dimension "nihongo"
        }

        prod {
            signingConfig signingConfigs.release
            versionCode gitVersionCode
            versionName gitVersionName
            applicationId "fr.frogdevelopment.nihongo.dico"

            dimension "nihongo"
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "$project.rootDir/tools/rules-proguard.pro"
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Test
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'

    // Android
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'

    // Divers
    implementation 'org.apache.commons:commons-lang3:3.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.7'

    // logback
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.github.tony19:logback-android-core:1.1.1-6'
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }

    //
    implementation 'com.google.code.gson:gson:2.8.2'
    //   Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    implementation 'com.github.GrenderG:Toasty:1.2.8'
}
